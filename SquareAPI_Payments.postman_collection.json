{
	"info": {
		"_postman_id": "b9abc9ba-4c35-4d47-b139-0f44ee2f0b35",
		"name": "SquareAPI_Payments",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Payments",
			"item": [
				{
					"name": "ListPayment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response Status\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Square-Version",
								"value": "2021-05-13",
								"type": "text"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/{{payment}}/",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{payment}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "CratePayment_CreditCard",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var emailAddress = pm.collectionVariables.get(\"email\")\r",
									"var amountValue = pm.collectionVariables.get(\"amount\")\r",
									"pm.test(\"Response Status\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"pm.collectionVariables.set(\"payment_id\",jsonData.payment.id)\r",
									"\r",
									"pm.test(\"Validate Amount\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(amountValue);\r",
									"})\r",
									";pm.test(\"Validate Currency\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"USD\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validate Card Type\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"CREDIT\");\r",
									"});\r",
									"pm.test(\"Validate Email\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(emailAddress);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var ranVal = pm.variables.replaceIn('{{$randomExampleEmail}}');\r",
									"pm.collectionVariables.set(\"email\", ranVal)\r",
									"\r",
									"ranVal = pm.variables.replaceIn('{{$randomInt}}')\r",
									"pm.collectionVariables.set(\"amount\", ranVal)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Square-Version",
								"value": "2021-05-13",
								"type": "text"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"idempotency_key\": \"{{$randomUUID}}}\",\r\n    \"source_id\": \"ccof:customer-card-id-ok\",\r\n    \"accept_partial_authorization\": false,\r\n    \"autocomplete\": false,\r\n    \"buyer_email_address\": \"{{email}}\",\r\n    \"location_id\": \"{{location_id}}\",\r\n    \"note\": \"free text test \",\r\n    \"amount_money\": {\r\n      \"amount\": {{amount}},\r\n      \"currency\": \"USD\"\r\n    }\r\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/{{payment}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{payment}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetSpecificPayment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var paymentID = pm.collectionVariables.get(\"payment_id\")\r",
									"\r",
									"pm.test(\"Response Status\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"pm.test(\"PaymentID is Correct\", function () {\r",
									"    pm.expect(jsonData.payment.id).to.eql(paymentID);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Square-Version",
								"value": "2021-05-13",
								"type": "text"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/{{payment}}/{{payment_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{payment}}",
								"{{payment_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "CratePayment_CASH",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"// console.log(pm.response)\r",
									"// console.log(pm.response.text())\r",
									"\r",
									"pm.test(\"Response Code\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(400);\r",
									"});\r",
									"pm.test(\"Response Status\", function () {\r",
									"    pm.expect(pm.response.status).to.eql('Bad Request');\r",
									"});\r",
									"pm.test(\"Response time is less than 1s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate Error Details\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Accept partial authorization not supported for source_id CASH of type CASH\")\r",
									"})\r",
									"pm.test(\"Validate Error Category\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"INVALID_REQUEST_ERROR\")\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var ranVal = pm.variables.replaceIn('{{$randomExampleEmail}}');\r",
									"pm.collectionVariables.set(\"email\", ranVal)\r",
									"\r",
									"ranVal = pm.variables.replaceIn('{{$randomInt}}')\r",
									"pm.collectionVariables.set(\"amount\", ranVal)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Square-Version",
								"value": "2021-05-13",
								"type": "text"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"idempotency_key\": \"{{$randomUUID}}}\",\r\n    \"source_id\": \"CASH\",\r\n    \"accept_partial_authorization\": true,\r\n    \"autocomplete\": false,\r\n    \"buyer_email_address\": \"{{email}}\",\r\n    \"location_id\": \"{{location_id}}\",\r\n    \"note\": \"free text test \",\r\n    \"amount_money\": {\r\n      \"amount\": {{amount}},\r\n      \"currency\": \"USD\"\r\n    }\r\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/{{payment}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{payment}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdatePayment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response Status\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Square-Version",
								"value": "2021-05-13",
								"type": "text"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"idempotency_key\": \"{{$guid}}\",\r\n    \"payment\": {\r\n      \"amount_money\": {\r\n        \"currency\": \"USD\",\r\n        \"amount\": 8000\r\n      }\r\n    }\r\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/{{payment}}/{{payment_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{payment}}",
								"{{payment_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddTipToPayment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response Status\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"var paymentID = pm.collectionVariables.get(\"payment_id\")\r",
									"var amountValue = pm.collectionVariables.get(\"amount\")\r",
									"\r",
									"pm.test(\"PaymentID is Correct\", function () {\r",
									"    pm.expect(jsonData.payment.id).to.eql(paymentID);\r",
									"});\r",
									"pm.test(\"PaymentID is Correct\", function () {\r",
									"    pm.expect(jsonData.payment.tip_money.amount).to.eql(5);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"ranVal = pm.variables.replaceIn('{{$randomInt}}')\r",
									"pm.collectionVariables.set(\"amount\", ranVal)\r",
									"console.log(ranVal)\r",
									"console.log(typeof(ranVal))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Square-Version",
								"value": "2021-05-13",
								"type": "text"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"payment\": {\r\n      \"tip_money\": {\r\n        \"amount\": 5,\r\n        \"currency\": \"USD\"\r\n      }\r\n    },\r\n    \"idempotency_key\": \"{{$guid}}\"\r\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/{{payment}}/{{payment_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{payment}}",
								"{{payment_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "CancelPayment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response Status\", function () {\r",
									"    pm.response.to.be.success;\r",
									"});\r",
									"pm.test(\"Response time is less than 1s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Square-Version",
								"value": "2021-05-13",
								"type": "text"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/{{payment}}/{{payment_id}}/cancel",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{payment}}",
								"{{payment_id}}",
								"cancel"
							]
						}
					},
					"response": []
				},
				{
					"name": "CancelNonExistingPayment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var paymentID = pm.collectionVariables.get(\"payment_id\")\r",
									"\r",
									"pm.test(\"Response Status\", function () {\r",
									"    pm.response.to.be.error;\r",
									"});\r",
									"pm.test(\"Response time is less than 1s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate Error Code\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"NOT_FOUND\")\r",
									"})\r",
									"pm.test(\"Validate Error Details\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Could not find payment with id: \"+paymentID+\"2\")\r",
									"})\r",
									"pm.test(\"Validate Error Category\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"INVALID_REQUEST_ERROR\")\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Square-Version",
								"value": "2021-05-13",
								"type": "text"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/{{payment}}/{{payment_id}}2/cancel",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{payment}}",
								"{{payment_id}}2",
								"cancel"
							]
						}
					},
					"response": []
				},
				{
					"name": "CompletePayment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response Status\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Square-Version",
								"value": "2021-05-13",
								"type": "text"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/{{payment}}/{{payment_id}}/complete",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{payment}}",
								"{{payment_id}}",
								"complete"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Refunds",
			"item": [
				{
					"name": "ListRefund",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response Status\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Square-Version",
								"value": "2021-05-13",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/{{refund}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{refund}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "RefundPayment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"console.log(jsonData)\r",
									"// console.log(pm.response)\r",
									"const schema = {\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"refund\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"id\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"status\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"amount_money\": {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"amount\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"currency\": {\r",
									"              \"type\": \"string\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"amount\",\r",
									"            \"currency\"\r",
									"          ]\r",
									"        },\r",
									"        \"payment_id\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"order_id\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"created_at\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"updated_at\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"location_id\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"id\",\r",
									"        \"status\",\r",
									"        \"amount_money\",\r",
									"        \"payment_id\",\r",
									"        \"order_id\",\r",
									"        \"created_at\",\r",
									"        \"updated_at\",\r",
									"        \"location_id\"\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"refund\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"\r",
									"pm.test(\"Response Status\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.collectionVariables.set(\"refund_id\",jsonData.refund.id)\r",
									"\r",
									"pm.test(\"Validate Status\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"PENDING\");\r",
									"    // pm.expect(pm.response.text()).to.include(${{pay}});\r",
									"});\r",
									"\r",
									"pm.test(\"Validate Json Schema\", function(){\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"ranVal = pm.variables.replaceIn('{{$randomInt}}')\r",
									"pm.collectionVariables.set(\"amount\", ranVal)\r",
									"console.log(ranVal)\r",
									"console.log(typeof(ranVal))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Square-Version",
								"value": "2021-05-13",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"amount_money\": {\r\n      \"amount\": 50,\r\n      \"currency\": \"USD\"\r\n    },\r\n    \"idempotency_key\": \"{{guid}}\",\r\n    \"payment_id\": \"{{payment_id}}\"\r\n  }'",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/{{refund}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{refund}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "HighRefundPayment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.test(\"Response Status\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(400);\r",
									"});\r",
									"pm.test(\"Response time is less than 1s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate Error Code\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"AMOUNT_TOO_HIGH\")\r",
									"})\r",
									"pm.test(\"Validate Error Details\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"The requested refund amount exceeds the amount available to refund. One or more refunds might have already been attempted for this payment.\")\r",
									"})\r",
									"pm.test(\"Validate Error Category\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"INVALID_REQUEST_ERROR\")\r",
									"})\r",
									"pm.test(\"Validate Error Field\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"amount_money.amount\")\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Square-Version",
								"value": "2021-05-13",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"amount_money\": {\r\n      \"amount\": 200000,\r\n      \"currency\": \"USD\"\r\n    },\r\n    \"idempotency_key\": \"{{guid}}\",\r\n    \"payment_id\": \"{{payment_id}}\"\r\n  }'",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/{{refund}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{refund}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetRefundPayment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response Status\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"pm.test(\"Validate Status\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"COMPLETED\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Square-Version",
								"value": "2021-05-13",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/{{refund}}/{{refund_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{refund}}",
								"{{refund_id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "EAAAEK7JSivTlKHupvQ0ncLjeZD_Ro3cH18gHtvV0etdTk4Od_Ne34j-1Opbkr_T",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "payment_id",
			"value": "0"
		},
		{
			"key": "refund_id",
			"value": "0"
		},
		{
			"key": "email",
			"value": "test@test.com"
		},
		{
			"key": "amount",
			"value": "1"
		}
	]
}